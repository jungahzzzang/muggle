plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.curty'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // database
    implementation 'com.mysql:mysql-connector-j'
    // devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // google cloud storage
    implementation platform('com.google.cloud:spring-cloud-gcp-dependencies:6.2.2')
    implementation 'com.google.cloud:spring-cloud-gcp-starter-storage'
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.0'
    // springboot: configuration processor
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    // xml -> json
    implementation 'org.json:json:20240303'
    // springboot: jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // springboot: web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(Jar).configureEach {
    enabled = false
}

tasks.named('bootJar') {
    enabled = true
    mainClass.set('com.curty.muggle.MuggleApplication')
    archiveFileName.set('app.jar')
}